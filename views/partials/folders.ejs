<%- include('./folderschin.ejs') %>

<div class=" row " style="font-family: 'Rubik', sans-serif;">





  <div class="col d-flex">
    <a class="btn btn-dark m-2" onclick="back()"><i class="fa-solid fa-arrow-left"></i></a>

    <div class="my-auto" style="">
      <input type="text"  value="/root/app" class="form-control rounded-pill" id="path"></input>

    </div>

    <div class="d-none d-md-block ms-auto">
      <%- include('./createmenu.ejs') %>
  
    </div>
  </div>

 






</div>


<div class=" row ">


  <style>
    .folder {
      cursor: pointer;
    }
  </style>
  <div class="d-flex">
    <div class="input-group flex-nowrap mx-2 my-1">
      <!-- <input type="text" class="form-control" placeholder="Username" > -->
      <input type="text" class="form-control" id="filterInput" placeholder="Type to Search" aria-label="Username" aria-describedby="addon-wrapping" >
      <span class="input-group-text" id="addon-wrapping"> <i class="fa-solid fa-magnifying-glass m-auto  " style="font-size: 1.5rem; color: rgb(42, 97, 99);"></i> </span>

    </div>
   
  </div>

  <ul style="max-height: 60vh; overflow-y: auto;" id="itemList">
    <% folder.forEach(element => { %>




    <li style="list-style: none;">
      <div class="row m-2 border rounded  p-2">
        <div class="col d-flex  ">
          <div class="d-flex folder" data-foldername="<%= element %>" id="folder" onclick="cd(this)">
            <i class="fa-regular fa-folder my-auto mx-1" style="font-size: 1.5rem;"></i>
            <h6 class="m-0 fw-bold text-dark  my-auto " ><%= element %></h6>
  
          </div>
          <i class="fa-solid fa-trash btn-dark btn p-2 ms-auto" onclick="deleteapp(this)" style="font-size: 0.8rem;" data-folder="<%= element %>"></i>
        </div>

      </div>

    </li>



    <% }) %>
  </ul>
  <hr>
  <div class=" col d-none m-2 d-md-flex">
    <%- include('./folderexecute.ejs') %>

  </div>
  <div id="output" class="output-terminal mb-3 rounded-2" style="max-height: 60vh; overflow-y: auto;">
    ðŸ¤  Log things here...
  </div>
</div>





<form style="display: none;" class="mb-4">

  <div class="mb-3">
    <label for="command" class="form-label">Command:</label>

    <textarea class="form-control text-light" name="dir" id="dir" cols="30" rows="10" style="background-color: black;"></textarea>
  </div>
  <button class="btn btn-light btn-sm mt-2" type="submit" hx-post="/changedir" hx-trigger="click" id="dirbtn" hx-target="#home">Execute Command</button>

</form>


<form action="/readfile/file" method="post" id="file" style="display: none;">
  <input type="text" name="filePath" id="filepath">
</form>


<script>
  document.getElementById('path').value = path;

  document.getElementById("createFolderButton").addEventListener("click", createNewFolder);
  document.getElementById("createFileButton").addEventListener("click", createNewFile);

  function createNewFolder() {

    const folderName = prompt("Enter the name of the new folder:");


    if (folderName) {
      document.getElementById('command').value = `cd ${path} && mkdir ${folderName}`;
      document.getElementById('exe').click();


    } else {

      console.log("Folder creation canceled");
    }
  }


  function createNewFile() {

    const folderName = prompt("Enter the name of the new file:");


    if (folderName) {
      document.getElementById('command').value = `cd ${path} && touch ${folderName}`;
      document.getElementById('exe').click();


    } else {

      console.log("Folder creation canceled");
    }
  }




  function deleteapp(button) {
    const folder = button.getAttribute('data-folder');

    const confirmation = confirm(`Are you sure you want to delete the folder: ${folder}?`);

    if (confirmation) {
      const deleteCommand = `rm -r ${path}${folder} && cd ${path} && ls -a`;

      document.getElementById('dir').value = deleteCommand;

      document.getElementById('dirbtn').click();
    } else {
      console.log('Deletion canceled');
    }

  }

  var folders = "<%= folder%>"


  if (!folders.length) {
    var filePath = `${path.slice(0, -1)}`
    console.log(filePath);

    document.getElementById('filepath').value = filePath

    document.getElementById('file').submit();
  }

  function cd(button) {



    foldername = button.getAttribute('data-foldername');
    console.log(folders);
    if (foldername.includes('.') || !folders.length) {

      var filePath = `${path}${foldername}`

      document.getElementById('filepath').value = filePath

      document.getElementById('file').submit();


    } else {

      console.log('Change directory to:', foldername);
      document.getElementById('dir').value = `cd ${path}${foldername}/ && ls -a`;
      path += `${foldername}/`;

      console.log('Current path:', path);
      document.getElementById('dirbtn').click();

    }
  }


  window.onbeforeunload = function () {
   back()
  }
  function back() {
    const pathParts = path.split('/');


    if (pathParts.length > 2) {
      path = pathParts.slice(0, -2).join('/') + '/';
    } else {
      path = '/';
    }
    document.getElementById('dir').value = `cd ${path} && ls -a`;
    console.log(path, back);
    document.getElementById('dirbtn').click();

  }

  function pathcmd() {


    const cmd = document.getElementById('pathcmd').value
    console.log(`cd ${path} && ${cmd}`);

    document.getElementById('command').value = `cd ${path} && ${cmd}`;

    document.getElementById('exe').click();

  }
</script>


<script>
  document.getElementById('filterInput').addEventListener('input', function() {
    var filterValue = this.value.toLowerCase(); // Get the value entered by the user and convert it to lowercase for case-insensitive filtering
    var itemList = document.getElementById('itemList');
    var items = itemList.getElementsByTagName('li');

    Array.from(items).forEach(function(item) {
      var text = item.textContent.toLowerCase();
      if (text.indexOf(filterValue) > -1) {
        item.style.display = 'block'; // Show the item if the text matches the filter
      } else {
        item.style.display = 'none'; // Hide the item if the text does not match the filter
      }
    });
  });
</script>