

<!-- <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css"> -->
<!-- Add your own styles if needed -->
<!-- <script src="https://cdn.jsdelivr.net/npm/chart.js"></script> -->

<form style="display: none;" class="mb-4">

  <div class="mb-3">
      <label for="command" class="form-label">Command:</label>

      <textarea class="form-control text-light" name="command" id="cmd" cols="30" rows="10" style="background-color: black;" ></textarea>

  </div>
  <button class="btn btn-light btn-sm mt-2" type="submit"  hx-post="/execute" id="execute" hx-target="#status">Execute Command</button>

</form>




<!-- <form hx-post="/cronjob" hx-target="#output">
  <input type="text" id="cron" name="cron">
  <button type="submit" onclick="">submit</button>
</form> -->



<div id="statusContainer" class="row">
  <div class="col-md-4 ">
    <div class="card ">
        <div class="card-body">
            <h5 class="card-title">CPU Usage</h5>
            <p class="card-text">NaN%</p>
        </div>
    </div>
</div>
<div class="col-md-4 ">
    <div class="card  ">
        <div class="card-body">
            <h5 class="card-title  ">Free Memory</h5>
            <p class="card-text">NaN MiB</p>
        </div>
    </div>
</div>
<div class="col-md-4">
    <div class="card">
        <div class="card-body">
            <h5 class="card-title">Used Memory</h5>
            <p class="card-text">NaN/ NaNMiB</p>
        </div>
    </div>
</div>
</div>
<hr>

<script>
         

        // Function to fetch system status and update the UI
        function updateStatus(statusText) {

            function extractInfo(statusText) {
            const lines = statusText.split('\n');
            const cpuInfo = lines[1].split(/\s+/);
            const memInfo = lines[2].split(/\s+/);

            console.log(memInfo);

            return {
                cpuUsage: parseFloat(cpuInfo[7]),  // Extracting %CPU (id)
                freeMemory: parseFloat(memInfo[5]),  // Extracting Free Memory
                usedMemory: parseFloat(memInfo[7]),
                totalMemory: parseFloat(memInfo[3])  // Extracting Used Memory
            };
        }
            // Extract information from the status text
            const { cpuUsage, freeMemory, usedMemory , totalMemory } = extractInfo(statusText);

            // Update the UI
            const statusContainer = document.getElementById('statusContainer');
            statusContainer.innerHTML = `
                <div class="col-md-4 ">
                    <div class="card ">
                        <div class="card-body">
                            <h5 class="card-title">CPU Usage</h5>
                            <p class="card-text">${cpuUsage}%</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-4 ">
                    <div class="card  ">
                        <div class="card-body">
                            <h5 class="card-title  ">Free Memory</h5>
                            <p class="card-text">${freeMemory} MiB</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title">Used Memory</h5>
                            <p class="card-text">${usedMemory}/ ${totalMemory}MiB</p>
                        </div>
                    </div>
                </div>
            `;
        }

</script>






<div id="status" class="output-terminal mb-3 rounded-2 d-none" style="max-height: 60vh; overflow-y: auto;">
   ðŸŒŸ Stauts Here...
</div>

<%- include('./schedule.ejs') %>


<!-- <div class="mb-3">
  <a class="btn btn-primary" onclick="setup()" ><i class="fa-solid fa-gears"></i> Setup Server</a>

</div> -->


<script>

    setInterval(function() {
      if (document.getElementById('cmd') !== null) {
      console.log(document.getElementById('status').textContent);
      // makecharts(document.getElementById('status').textContent)
      updateStatus(document.getElementById('status').textContent)
      document.getElementById('cmd').value = 'top -b -n 1 | grep -E "^(%Cpu|MiB Mem|MiB Swap)"';
      document.getElementById('execute').click();
    }
  }, 3000);
  
  function setup() {
    document.getElementById('command').value = `mkdir /root/app && sudo apt install nginx -y && sudo apt install ufw -y`;
    document.getElementById('exe').click();
  }


// function cron() {



//   var corn = document.getElementById('cron').value

//   var task = `(crontab -l | grep '/mount/share/script.py') || { crontab -l; '*/1 * * * * some_user python /mount/share/script.py >> /root/crontab 2>&1'; } | crontab -`
//   console.log(task);
//   document.getElementById('command').value = task ;
//   document.getElementById('exe').click();

// }




</script>







<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.10.2/dist/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

